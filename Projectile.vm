function Projectile.new 1
push constant 14
call Memory.alloc 1
pop pointer 0
push constant 10
pop this 7
push constant 50
pop this 8
push constant 5
pop this 6
push argument 0
pop this 0
push constant 256
push argument 1
sub
pop this 1
push this 0
pop this 2
push this 1
pop this 3
push argument 4
pop this 4
push constant 0
pop this 5
push argument 2
push this 7
call Math.multiply 2
pop this 10
push argument 3
push constant 314
call Math.multiply 2
push constant 180
call Math.divide 2
pop this 13
push constant 0
push constant 100
push this 13
push this 13
call Math.multiply 2
push constant 200
call Math.divide 2
sub
call Math.max 2
pop this 12
push constant 100
push this 13
call Math.min 2
pop this 11
push this 10
push this 11
call Math.multiply 2
push constant 500
call Math.divide 2
push this 8
call Math.divide 2
pop this 9
push this 9
push constant 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 9
label IF_FALSE0
push pointer 0
return
function Projectile.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Projectile.calcX 3
push argument 0
pop pointer 0
push argument 1
push this 9
call Math.multiply 2
pop local 1
push this 10
push local 1
call Math.multiply 2
push constant 10
call Math.divide 2
push this 12
call Math.multiply 2
push constant 10
call Math.divide 2
pop local 2
push this 0
push local 2
add
pop local 0
push local 0
push this 4
push local 1
call Math.multiply 2
push constant 8
call Math.divide 2
add
pop local 0
push local 0
return
function Projectile.calcY 4
push argument 0
pop pointer 0
push argument 1
push this 9
call Math.multiply 2
pop local 0
push this 10
push constant 10
call Math.divide 2
push local 0
call Math.multiply 2
push this 11
call Math.multiply 2
push constant 10
call Math.divide 2
pop local 1
push constant 5
push local 0
call Math.multiply 2
push local 0
call Math.multiply 2
pop local 2
push this 1
push local 1
add
push local 2
sub
pop local 3
push local 3
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push local 3
return
label IF_END0
function Projectile.drawNextTime 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
push this 3
call Projectile.drawIfPossible 3
pop temp 0
push this 5
push constant 1
add
pop this 5
push pointer 0
push this 5
call Projectile.calcX 2
pop this 2
push pointer 0
push this 5
call Projectile.calcY 2
pop this 3
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
push this 3
call Projectile.drawIfPossible 3
pop temp 0
push constant 0
return
function Projectile.drawIfPossible 1
push argument 0
pop pointer 0
push constant 256
push argument 2
sub
pop local 0
push argument 1
push constant 5
gt
push argument 1
push constant 500
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 5
gt
push local 0
push constant 250
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 0
push this 6
call Screen.drawCircle 3
pop temp 0
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function Projectile.getX 0
push argument 0
pop pointer 0
push this 2
return
function Projectile.getY 0
push argument 0
pop pointer 0
push constant 256
push this 3
sub
return
